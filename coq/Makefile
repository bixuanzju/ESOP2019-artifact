
WARN_MSG = "(* !!! WARNING: AUTO GENERATED. DO NOT MODIFY !!! *)\n"

OTT_LOC    = ../../spec/poly

## Name of the submakefile generated by coq_makefile
COQMKFILENAME=CoqSrc.mk

LIBNAME=Top

VARS=metavars
SYNTAX=Syntax
TARGET=SystemF
SOURCE=Fii
RECORD=Record

FILES     = $(SYNTAX)_ott $(TARGET)_inf $(SOURCE)_inf $(RECORD)_inf
VFILES   = $(foreach i, $(FILES), $(i).v)
VOFILES  = $(foreach i, $(FILES), $(i).vo)
TEMPFILE = temp.ott

.SECONDARY: $(VFILES)

all: coq

quick:  $(COQMKFILENAME) $(VFILES)
	@$(MAKE) -f CoqSrc.mk quick

coq: $(COQMKFILENAME) $(VFILES)
	@$(MAKE) -f CoqSrc.mk

%.vo: %.v
	@$(MAKE) -f CoqSrc.mk $*.vo


# $(SYNTAX)_ott.v: $(OTT_LOC)/$(VARS).ott $(OTT_LOC)/$(TARGET).ott $(OTT_LOC)/$(SOURCE).ott $(OTT_LOC)/$(RECORD).ott Makefile
# 	ott $(OTT_LOC)/$(VARS).ott $(OTT_LOC)/$(TARGET).ott $(OTT_LOC)/$(SOURCE).ott $(OTT_LOC)/$(RECORD).ott -o $(SYNTAX)_ott.v -coq_lngen true
# 	make METALIB.FIX_$(SYNTAX)_ott
# 	@if grep '<<no parses (' $@ >/dev/null 2>&1 && \
# 		[ -z "$(DONTSTOP)" ]; then \
# 			echo; \
# 			echo "***** OTT PARSE ERROR(S) *****"; \
# 			grep -n '<<no parses (' $@; \
# 			$(RM) $@; \
# 			exit 1; \
# 	fi >&2

# $(TARGET)_inf.v: $(OTT_LOC)/*.ott Makefile
# 	cat $(OTT_LOC)/$(VARS).ott $(OTT_LOC)/$(TARGET).ott >> $(TEMPFILE)
# 	lngen --coq $(TARGET)_inf.v --coq-ott $(SYNTAX)_ott $(TEMPFILE)
# 	make METALIB.FIX_$(TARGET)_inf
# 	rm $(TEMPFILE)


# $(SOURCE)_inf.v: $(OTT_LOC)/*.ott Makefile
# 	cat $(OTT_LOC)/$(VARS).ott $(OTT_LOC)/$(SOURCE).ott >> $(TEMPFILE)
# 	lngen --coq $(SOURCE)_inf.v --coq-ott $(SYNTAX)_ott $(TEMPFILE)
# 	make METALIB.FIX_$(SOURCE)_inf
# 	rm $(TEMPFILE)

$(COQMKFILENAME): Makefile $(shell ls *.v | grep -v _ott.v | grep -v _inf.v)
	coq_makefile -arg '-w -variable-collision,-meta-collision,-require-in-module' -f _CoqProject -o $(COQMKFILENAME)

METALIB.FIX_%:
	sed -i -e 's/Metatheory/Metalib.Metatheory/g' $*.v
	sed -i -e 's/LibLNgen/Metalib.LibLNgen/g' $*.v
	sed '1d' $*.v > __TMP__; mv __TMP__ $*.v
	@perl -pi -e 'print $(WARN_MSG) if $$. == 1' $*.v


coqclean:
	rm -if *.v-e *.v.d *.vo *.glob $(VOFILES) $(COQMKFILENAME)

clean: coqclean
